üß† Replit AI Agent Prompt (Full Instruction)
üéØ MAIN GOAL:
Refactor the portfolio optimization app so it uses a **static dataset (10 years of daily data)** stored locally inside Replit, instead of downloading from Yahoo Finance or any API.

The app must:
‚úÖ Load data instantly from a CSV file (no web calls).
‚úÖ Be limited to 10 fixed tickers.
‚úÖ Cover exactly 10 years (2015‚Äì2025).
‚úÖ Work offline and reproduce the same results for all users.

---

### 1Ô∏è‚É£ DATA PREPARATION (done locally before upload)

Guide for the developer or project owner:
-----------------------------------------
To prepare the dataset, run this Python script *once locally* (on a PC or Google Colab):

```python
import yfinance as yf
import pandas as pd

tickers = ["SPY","QQQ","IWM","XLF","TLT","HYG","GLD","SLV","UUP","VIXY"]

start_date = "2015-01-01"
end_date   = "2025-01-01"

print("Downloading data... This may take 1‚Äì2 minutes.")
data = yf.download(tickers, start=start_date, end=end_date, progress=True)["Adj Close"]
data = data.dropna(how="all")
data.to_csv("prices_10y.csv")
print("‚úÖ Saved to prices_10y.csv (", data.shape, ")")


Then upload this file into the Replit project inside a new folder called data/:

/data/prices_10y.csv

2Ô∏è‚É£ LOAD LOGIC IN REPLIT

Create or update a file data_loader.py (or edit data.py) with this function:

import pandas as pd

TICKERS = ["SPY","QQQ","IWM","XLF","TLT","HYG","GLD","SLV","UUP","VIXY"]

def load_static_prices():
    """
    Loads pre-downloaded Adjusted Close prices for 10 tickers (2015‚Äì2025).
    Data is stored locally in /data/prices_10y.csv.
    """
    df = pd.read_csv("data/prices_10y.csv", index_col=0, parse_dates=True)
    df = df[TICKERS]  # enforce ticker order
    print(f"‚úÖ Loaded dataset with {df.shape[0]} days √ó {df.shape[1]} assets.")
    return df

3Ô∏è‚É£ UPDATE THE APP CONFIGURATION

In your main app file (app.py or portfolio_app.py):

Replace all dynamic fetching functions (yfinance, TwelveData, Finnhub, etc.)
‚Üí with prices = load_static_prices().

Remove or disable any inputs asking for:

‚ÄúYears of data‚Äù ‚Üí force it to 10 years (2015‚Äì2025)

‚ÄúCustom tickers‚Äù ‚Üí instead show the fixed list below.

4Ô∏è‚É£ USER INTERFACE / INSTRUCTIONS

Add a clear message in the UI (or print at startup):

üìä This educational version uses a fixed dataset:
  - Period: 2015‚Äì2025 (10 years of daily data)
  - Available tickers (10 total):
    SPY, QQQ, IWM, XLF, TLT, HYG, GLD, SLV, UUP, VIXY
üí° You can select any subset of these tickers for optimization,
   but you cannot add new ones.


If the app has a dropdown or multiselect, populate it only with these tickers.

5Ô∏è‚É£ PERFORMANCE & SAFETY

Loading the CSV should take < 2 seconds.

File size: around 2‚Äì3 MB ‚Äî perfect for Replit free tier.

No network calls or API keys should remain anywhere in the code.

Make sure to import pandas as pd and parse_dates=True for correct time indexing.

6Ô∏è‚É£ TESTING

After implementing:

Run load_static_prices() ‚Üí it should print dataset shape (~2500 rows √ó 10 columns).

Run the optimizer ‚Üí it should build portfolios normally.

Check that users cannot exceed the fixed 10-ticker universe or 10-year range.

üèÅ FINAL DELIVERABLE

A working Replit app that:
‚úÖ Loads data from /data/prices_10y.csv
‚úÖ Works fully offline
‚úÖ Uses exactly 10 tickers and 10 years
‚úÖ Tells users these limits clearly
‚úÖ Keeps optimization, CAPM, and visualization features working as before


---

### ‚úÖ What to do next
1. Copy and paste this prompt into your **Replit AI Agent** chat.  
2. Then upload your prepared file `prices_10y.csv` into a `data/` folder.  
3. The agent will automatically:  
   - Replace dynamic fetching with static loading  
   - Update the UI/configs  
   - Add instructions for users about the fixed tickers  

---

Would you like me to add a **follow-up mini prompt** to create the dropdown (so users can s